service: "invoice-creator"
# frameworkVersion: 3
plugins:
  - serverless-esbuild
  - serverless-reqvalidator-plugin
  - serverless-aws-documentation
  - serverless-plugin-chrome

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-1'}

  environment:
    USERS_TABLE: USERS-${self:provider.stage}
    USERS_EMAIL_INDEX: usersEmailIndex
    SECRET_AUTH: secretauth-${self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}

    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USERS_TABLE}/index/${self:provider.environment.USERS_EMAIL_INDEX}

    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource: arn:aws:sqs:eu-west-1:306486807413:invoice_queue

functions:
  Hello:
    handler: src/lambda/hello/hello.handler
    events:
      - http:
          method: post
          path: hello
          authorizer: Auth

  Login:
    handler: src/lambda/http/login.handler
    events:
      - http:
          method: post
          path: login

  Register:
    handler: src/lambda/http/register.handler
    events:
      - http:
          method: post
          path: signup
          reqValidatorName: RequestBodyValidador
          documentation:
            summary: create a new user
            description: create a new user
            requestModels:
              "application/json": RegisterUserRequest

  Auth:
    handler: src/lambda/http/auth/authorizer.handler

  CreateInvoiceStep1:
    handler: src/lambda/http/invoices/create-invoice.handler
    events:
      - http:
          method: post
          path: invoices

  ProcessInvoice:
    handler: src/lambda/sqs/process-invoice.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - InvoiceSQS
              - Arn
    runtime: nodejs8.10

package:
  individually: true
  exclude:
    - node_modules/puppeteer/.local-chromium/**

custom:
  documentation:
    api:
      info:
        version: "1.0.0"
        title: Invoice-creator
        description: serverless application to create and manage invoice

    models:
      - name: RegisterUserRequest
        contentType: application/json
        schema: ${file(src/models/register-user-request.json)}

  esbuild:
  bundle: true
  minify: false
  sourcemap: true
  exclude:
    - aws-sdk
  target: node14
  define:
  require.resolve: undefined
  platform: node
  concurrency: 10

  chrome:
    flags:
      - --window-size=1280,1696 # Letter size
      - --hide-scrollbars
      - --ignore-certificate-errors
    # functions:
    #   - enableChromeOnThisFunctionName
    #   - mySuperChromeFunction

resources:
  Resources:
    RequestBodyValidador:
      Type: "AWS::ApiGateway::RequestValidator"
      Properties:
        Name: "req-body-validator"
        RestApiId:
          Ref: ApiGatewayRestApi
        ValidateRequestBody: true
        ValidateRequestParameters: false

    UsersDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.USERS_EMAIL_INDEX}
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    InvoiceSQS:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "invoice_queue"
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - "InvoiceDLQ"
              - "Arn"
          maxReceiveCount: 5

    InvoiceDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "invoice-dlq"
